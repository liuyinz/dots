# git config --global --unset http.proxy
# git config --global http.proxy 'socks5://127.0.0.1:1080'

[apply]
whitespace = nowarn

[user]
name = liuyinz
email = cheunghsu@outlook.com

[core]
# editor = code --wait
editor = nvim
autocrlf = input
pager = less -x1,5
excludesfile = /Users/ray/.gitignore

[commit]
template = /Users/ray/.gitmessage

[color]
ui = auto
diff = auto
status = auto
branch = auto

[credential]
helper = osxkeychain

[blame]
date = short
coloring = repeatedLines
blankBoundary = true

[color "blame"]
repeatedLines = green

[format]
pretty = %C(bold blue)%h%C(auto)%d%Creset %s %C(yellow)[%cs,%an]

[pull]
rebase = false

[advice]
addEmptyPathspec = false

[rerere]
enabled = true

[hub]
protocol = https

[http]
postBuffer = 524288000

[http "https://github.com"]
proxy = socks5://127.0.0.1:4781
[https "https://github.com"]
proxy = socks5://127.0.0.1:4781

[diff]
tool = vscode
[difftool]
prompt = false
[difftool "vscode"]
cmd = code --wait --diff $LOCAL $REMOTE

[merge]
tool = vscode
[mergetool]
keepBackup = false
prompt = false
[mergetool "vscode"]
cmd = code --wait $MERGED

[filter "lfs"]
process = git-lfs filter-process
required = true
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f

[alias]
## Add
a = add
ai = add --interactive
aa = add --all
ae = add --edit
ap = add --patch
au = add --update

## Commit
c = commit
cm = commit -m
cma = commit -am
cd = commit --amend
cdn = commit --amend --no-edit

## Restore
e = restore
ec = restore --staged
es = restore -s
ecs = restore --staged -s
ea = restore --staged --worktree -s

## Stash
st = stash push
stp = stash pop --index
stl = stash list
sts = stash show --stat -p
stb = stash branch

## Branch
b = branch
bd = branch -d
bD = branch -D
bu = branch -u origin/$(git_current_branch)
bv = branch --list -vv -a
bm = branch -vv --merged

## Switch
w = switch
wm = switch master
wd = switch develop
wc = switch -c
wt = switch --track

## Merge
m = merge
mt = mergetool
mo = merge origin/master
mu = merge upstream/master

## Rebase
rb = rebase
rbi = rebase -i
rbd = rebase develop
rbm = rebase master

cp = cherry-pick

## Push
p = push
po = "!f() { git push origin $(git_current_branch) }; f"
pa = push --all origin
pt = push --tags origin
pp = push --prune origin
pd = push --delete
pu = "!f() { git push --set-upstream origin $(git_current_branch) }; f"

## Fetch
f = fetch
fo = fetch origin
fu = fetch upstream
fa = fetch --all
fp = fetch --prune

## Clone
cl = clone
clr = clone --recurse-submodules

## Remote
rt = remote
rta = remote add
rtr = remote remove
rts = remote show

## Pull
pl = pull
plu = pull upstream $(git_current_branch)
plo = pull origin "$(git_current_branch)"
plr = pull --rebase --autostash -v

# Submodule
sm = submodule
sma = submodule add
sms = submodule status
smi = submodule init
smd = submodule deinit
smu = submodule update
smf = submodule foreach
smp = submodule foreach "git pull origin master"

## Remove
rm = rm -r -f
rmc = rm -r --cached
## Clean
cn = clean -id

ss = status -sb
bl = blame -w --abbrev=6
slog = shortlog -nc

## Bisect
bs = bisect
bss = bisect start
bsb = bisect bad
bsg = bisect good
bsk = bisect skip
bsr = bisect run
bsl = bisect log
bsr = bisect reset

## Log
l = log --graph
lt = log --graph --stat
la = log --graph --all
lta = log --graph --all --stat

## Diff
d = diff
dc = diff --cached
ds = diff --stat
dcs = diff --stat --cached
dd = diff master...HEAD
dt = difftool

rv = revert
rvv = revert HEAD
rvn = revert --no-commit

rt = reset
rth = reset --hard
rts = reset --soft
